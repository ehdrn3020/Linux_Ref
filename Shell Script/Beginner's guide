
###1]쉘의 레벨과 변수###

$SHLVL 현재쉘의레벨

사전 정의 환경변수 (의미가 정해진 환경변수)
이름	      의미
$USER	    사용자 이름
$TERM	    터미널 타입
$PATH	    명령어를 검색할 디렉터리들의 리스트
$HOME	    홈 디렉터리
$SHELL	  로그인 쉘의 경로명
$MAIL	    메일 박스의 경로명
$HOSTNAME	호스트 이름

사전 정의 지역변수
이름	    의미
$$	    쉘의 프로세스 번호
$0	    쉘 스크립트 이름
$1 ~ $9	명령줄 인수
$*	    모든 명령줄 인수 리스트
$#	    명령줄	인수의 개수

#Ex
(test1.sh)
#!/bin/bash
echo "This Script Executable File : $0"
echo "Argument Count : $#"
echo "Argument List \$* : $*"
echo "Argument List \$@ : $@"
echo "Argument 1 : $1"
echo "Argument 2 : $2"
echo "Argument 3 : $3"
echo "Argument 4 : $4"

(실행)
$chmod 755 test1.sh
$./test1.sh a1 a2 a3 a4
This Script Executable File : ./test1.sh
Argument Count : 4
Argument List $* : a1 a2 a3 a4
Argument List $@ : a1 a2 a3 a4
Argument 1 : a1
Argument 2 : a2
Argument 3 : a3
Argument 4 : a4



###2]산술 연산###

앞으로 나오는 연산이나 조건문, 반복문등, 앞선 변수 모두 띄어쓰기를 확실하게 구분하여야 오류가 발생하지 않는다.
그리고 쉘 스크립트에서는 일반적으로 인자나 변수는 문자열 취급하기 때문에 다른 방식으로 연산을 한다.

#본 쉘의 산술 연산
$ a=2+3
$ echo $a
$ a=`expr 2 + 3` (반드시 빈칸)


#콘 쉘의 let 명령어를 이용한 산술 연산
$ let 변수=수식
$ let a=2*3
$ echo $a
6


#변수 타입 선언 (declare)
$ declare -i a (a는 정수형 변수)
$ a=12
$ a=a+1 (let 필요 없음)
$ echo $a

이름	              의미
declare -r 변수	  읽기 전용 변수로 선언
declare -i변수	  정수형 변수로 선언
declare -a 변수	  배열 변수로 선언
declare -f	     스크립트 안에정의된 모든 함수들을 보여준다.
declare -f 함수	  해당 함수 내용을 보여준다.
declare -x 변수	  환경변수로 export



###3]비교 연산###

#산술 비교 연산
산술 비교 연산자	  의미
정수1 -eq 정수2	  두 정수가 같으면 참 아니면 거짓
정수1 -ne 정수2	  두 정수가 다르면 참 아니면 거짓
정수1 -gt 정수2	  정수1이 정수2보다 크면 참 아니면 거짓
정수1 -ge 정수2	  정수1이 정수2보다 크거나 같으면 참 아니면 거짓
정수1 -lt 정수2	  정수1이 정수2보다 작으면 참 아니면 거짓
정수1 -le 정수2	  정수1이 정수2보다 작거나 같으면 참 아니면 거짓


#문자열 비교 연산
문자열 비교 연산자	  의미
문자열1 == 문자열2	  두 문자열이 같으면 참 아니면 거짓
문자열1 != 문자열2	  두 문자열이 다르면 참 아니면 거짓
-n 문자열	          문자열이 null이 아니면 참
-z 문자열	          문자열이 null이면 참


#파일 관련 연산
파일 관련 연산자	  의미
-a 파일	        해당 파일이 존재하면 참
-e 파일	        해당 파일이 존재하면 참
-r 파일	        사용자가 해당 파일을 읽을 수 있으면 참
-w 파일	        사용자가 해당 파일을 쓸 수 있으면 참
-x 파일	        사용자가 해당 파일을 실행할 수 있으면 참
-o 파일	        사용자가 해당 파일의 소유자이면 참
-z 파일	        해당 파일의 크기가 0이면 참
-f 파일	        해당 파일이 일반 파일이면 참
-d 파일	        해당 파일이 디렉터리이면 참



###4]Bash 제어구조###

#중첩 조건문
                if 조건식
                then
                    명령어리스트
                elfi
                then
                    명령어리스트
                else
                    명령어리스트
                fi

#스위치
                case 단어 in
                    패턴1) 명령어리스트;;
                    패턴2) 명령어리스트;;
                    ......
                    *) 명령어리스트;;
                esac


#반복문 (for) : 리스트의 각 값에 대해서 명령어들을 반복.   "[" 과 "]" 사이에는 반드시 공백문자가 들어가야 한다.
                for a in 1 2 3 4 5 6 7 8 9 10
                for a in $(seq 1 10)
                for ((a=0;a<10;a++))
                
                for 변수 in 단어리스트 (모든 명령줄 인수 처리 : $*)
                do
                    명령어리스트
                done
                
                Ex)
                for dir in $PATH
                do
                  ls –ld $dir
                done

#반복문 (while) : 조건에 따라 명령어들을 반복 실행
                while 조건식
                do
                    명령어리스트
                done


#반복문 (until) : 조건에 따라 명령어들을 반복 실행
                until 조건식 (조건식을 while문의 정반대로 넣어야 함)
                do
                    명령어리스트
                done

#함수
                함수이름()
                {
                    명령어리스트
                }



Ref : http://webtn.tistory.com/entry



